@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model ResultDataList<GetAllReviewDto>

<html>
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>


        .Review {
            border: 1px rgb(241, 241, 241) solid;
            box-shadow: 0px 0px 10px rgba(190, 189, 189, 0.1);
            border-radius: 10px;
            margin-bottom: 20px;
        }

        .reviews_product {
            padding: 20px;
        }

        .review_center {
            display: flex;
            justify-content: center;
        }

        .space {
            margin-bottom: 10px;
            padding: 0;
            width: 100%;
            height: 0.1rem;
            background-color: rgb(212, 212, 212);
        }

        .Date {
            float: right;
            text-align: right;
            padding: 5px;
            margin-top: 5px;
            margin-bottom: 20px
        }

        .RemoveBtn {
            float: right;
            text-align: right;
            padding: 5px;
            margin-top: 5px;
            color: red
        }

        .Nameuser {
            padding: 5px;
            margin-top: 20px;
            margin-bottom: 5px
        }

            .Nameuser span {
                font-weight: 100;
            }

        .Checkout {
            text-align: center;
            height: 55px;
            margin-bottom: 20px;
        }

            .Checkout button {
                border: 1px rgb(10, 10, 10) solid;
                border-radius: 7px;
                background-color: rgb(6, 5, 16);
                width: 90%;
                font-weight: bold;
                color: #fefefe;
                height: 100%;
            }

                .Checkout button:hover {
                    background-color: #cacaca;
                }

        .checked {
            color: orange;
        }

        .cart-numbers {
            font-weight: bold;
            margin-left: 0.4rem;
            display: flex;
            padding: 1rem;
            text-align: center;
        }

        .number-products {
            display: flex;
            padding: 3px;
            width: 30px;
            height: 30px;
            margin-left: 4px;
        }

        .rating_customer {
            margin: 20px;
        }

        .hidden {
            display: none
        }

        .submit{
            border:0;
            background-color:white;

        }

        .remove-review{
            color:red;
        }
        .pagination_review {
            text-align: center;
        }
    </style>

</head>
<body>

  @*   ReviewUser *@
   @*  <div class="container"> *@
      @*   <div class="reviews_product col-12"> *@
            <div class="cart-number">
                <div><h4>Reviews</h4></div>
                <div class="number-product">@Model.Count</div>
            </div>

            @if (Model.Count == 0)
            {
                <div>
                    <h5>No reviews yet</h5>
                    <p>Be the first to leave a review on this product and share your thoughts with other customers.</p>
          
                    <div class="Checkout col-3 ">

                        <button type="button" id="writeReviewBtn">Write a Review </button>

                    </div>
                </div>

            }
            else
            {
              @*   <div class=" Review col-11"> *@
                    <div class="rating_customer"><h6>Customer ratings & Review</h6></div>

                    <div class="Checkout col-lg-3  col-md-3 col-sm-3 ">

                        <button type="button" id="writeReviewBtn">Write a Review </button>

                    </div>

                    <div class="review_center col-lg-12 col-ms-12 row">
                        @{
                            int maxRating = 5;
                        }

                        @foreach (var Itms in Model.Entities)
                        {
                            int rating = Itms.Rating;
                            int coloredStars = (int)Math.Ceiling((double)rating / maxRating * 5);

                            <div class="Review col-11">
                                <div class="Date"><span>@Itms.ReviewDate</span></div>
                                <h6 class="Nameuser"><span>by</span> @Itms.UserName</h6>
                                @if (@ViewBag.UserId == @Itms.UserId)
                                {
                                    <div class="RemoveBtn">
                                        <form method="post" asp-action="DeleteReview">
                                 <input type="hidden" name="reviewId" value="@Itms.Id">
                                    <button class="submit" type="submit">
                                    <i class="remove-review fa-regular fa-trash-can"></i>
                                     </button>
                                   </form>
                                  </div>

                                }
                                else
                                {
                                    <div></div>
                                }
                                <div class="cart-numbers col-12">
                                    <div class="row">
                                        <div class="number-product col-sm-auto mb-2 mb-md-0">
                                            <span>@rating/5</span>
                                        </div>
                                        <div class="number-products  col-sm">
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                <span class="fa fa-star @(i <= coloredStars ? "checked" : "")"></span>
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="space"></div>
                                <div>
                                <p id="comm">@Itms.Comment</p>

                                </div>
                            </div>
                        }
                    </div>


                   @*  <div class="row col-12 pagination_review">
                        <nav aria-label="Page navigation example">
                            <ul class="pagination" id="paginationList">
                            </ul>
                        </nav>
                    </div>
 *@

                   @*  <section aria-label="Page navigation">
                        <!-- Pagination links -->
                        <ul class="pagination justify-content-center">
                            @if (@ViewBag.PageNamber > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("IndexReview", new { id =  @ViewBag.ProductId, pageNumber =  @ViewBag.PageNamber - 1, criteria = ViewBag.Criteria })">Previous</a>
                                </li>
                            }
                            @for (int i = 1; i <= Math.Ceiling((double)Model.Count / ViewBag.pageSize); i++)
                            {
                                <li class="page-item @(i ==  @ViewBag.PageNamber ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("IndexReview", new {id =  @ViewBag.ProductId, pageNumber = i, criteria = ViewBag.Criteria })">@i</a>
                                </li>
                            }

                            @if (@ViewBag.PageNamber < Math.Ceiling((double)Model.Count / ViewBag.pageSize))
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("IndexReview", new { categoryId = ViewBag.CategoryId, pageNumber =  @ViewBag.PageNamber + 1, criteria = ViewBag.Criteria })">Next</a>
                                </li>
                            }
                        </ul>

                    </section>
 *@

             @*    </div> *@
            }
           

     @*    </div> *@
   @*  </div> *@


   










    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/jquery/dist/jquery.js"></script>


    <script>

        // var pages = ["1", "2", "3", "4", "5", "6", "7"];
        // var currentPageIndex = 0;

        // // Function to create pagination elements
        // function createPageElements() {
        //     var paginationList = document.getElementById("paginationList");
        //     paginationList.innerHTML = ""; // Clear previous elements

        //     // Add new page items to the pagination
        //     for (var i = currentPageIndex; i < currentPageIndex + 3; i++) {
        //         if (i >= pages.length) break; // Check if index is within array bounds
        //         var pageItem = document.createElement("li");
        //         pageItem.className = "page-item";
        //         var pageNumber = pages[i];
        //         pageItem.innerHTML = `<a class="page-link" onclick="sendPageNumber(${pageNumber})">${pageNumber}</a>`;
        //         paginationList.appendChild(pageItem);
        //     }

        //     // Add "Next" button
        //     var nextButton = document.createElement("li");
        //     nextButton.className = "page-item";
        //     nextButton.innerHTML = '<a class="page-link" >Next</a>';
        //     nextButton.onclick = nextPage;
        //     paginationList.appendChild(nextButton);

        //     // Add "Previous" button
        //     var prevButton = document.createElement("li");
        //     prevButton.className = "page-item";
        //     prevButton.innerHTML = '<a class="page-link" href="#">Previous</a>';
        //     prevButton.onclick = previousPage;
        //     paginationList.insertBefore(prevButton, paginationList.firstChild);
        // }

        // // Function to navigate to next page
        // function nextPage() {
        //     if (currentPageIndex + 3 < pages.length) {
        //         currentPageIndex++;
        //         createPageElements();
        //     } else {
        //         increasePageNumbers();
        //         currentPageIndex++;
        //         createPageElements();
        //     }
        // }

        // // Function to navigate to previous page
        // function previousPage() {
        //     if (currentPageIndex > 0) {
        //         currentPageIndex--;
        //         createPageElements();
        //     }
        // }

        // // Function to increase page numbers
        // function increasePageNumbers() {
        //     var lastPage = parseInt(pages[pages.length - 1]);
        //     for (var i = 1; i <= 3; i++) {
        //         pages.push((lastPage + i).toString());
        //     }
        // }

        // // Function to send selected page number to controller using AJAX
        // function sendPageNumber(pageNumber) {
        //     var _page = pageNumber - 1;
        //     var _productId = parseInt($('#productId').text());
        //     console.log(_page)
        //     console.log(_productId)
        //     $.ajax({
        //         type: "GET",
        //         url: "/Review/IndexReview?id=" + _productId + "&page=" + _page,
        //         // data: { id: _productId, count: _count },
        //         success: function (response) {
        //             console.log(response)
        //             $('#Review').html(response);
        //             console.log("Page number sent successfully:", _page);


        //         },
        //         error: function (xhr, status, error) {
        //             console.error("Error sending page number:", error);
        //         }
        //     });
        // }



        // sidebar
        $(document).ready(function () {
            $('#writeReviewBtn').click(function (e) {
                e.preventDefault();

                var _Description = $('#Description').text();

                var _imgproduct = $('#productImg').attr('src');

                var _productId = parseInt($('#productId').text());


                if (_productId === 0) {
                    console.error('Please provide a review before submitting.');
                    return;
                }

                var dataToSend = {
                    productid: _productId,
                    Description: _Description,
                    imgproduct: _imgproduct

                };

                $.ajax({
                    url: '/Review/AddReview',
                    type: 'Get',
                    data: dataToSend,
                    success: function (response) {

                        $('#sidebar').html(response);

                        // openSidebar();
                    },
                    error: function (xhr, status, error) {
                        console.error(xhr.responseText);

                        window.location.href = '/Account/Login';
                    }
                });
            });
        });
       
    </script>

</body>
</html>